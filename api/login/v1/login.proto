// Specify using Protocol Buffers version 3 syntax
syntax = "proto3";

// Define the package name for the proto file, used for organization and avoiding naming conflicts
package layout.login.v1;

// Import Google API annotations for defining HTTP interface mappings
import "google/api/annotations.proto";
// Import validation rules library for validating message fields
import "validate/validate.proto";

// Specify the package name and import path for generated Go code
option go_package = "github.com/go-lynx/lynx-layout/api/login/v1;v1";
// Indicate to generate separate Java files for each message
option java_multiple_files = true;
// Specify the package name for generated Java code
option java_package = "github.com.go-lynx.lynx-layout.api.login.v1";
// Specify the outer class name for generated Java code
option java_outer_classname = "LoginProtoV1";

// Define Login service containing user login related RPC methods
service Login {
  // Define Login RPC method that receives LoginRequest message and returns LoginReply message
  rpc Login (LoginRequest) returns (LoginReply) {
    // Use Google API annotations to define HTTP mapping, mapping this RPC method to POST request
    option (google.api.http) = {
      post: "/login"  // Specify HTTP request method as POST, request path as /login
      body: "*"       // Indicates that the request body contains the entire LoginRequest message
    };
  }
}

// Define login request message
message LoginRequest {
  // User account field, field number 1
  // Use validate rules to validate account length, minimum length 5, maximum length 32
  string account = 1
  [
    (validate.rules).string = {
      min_len : 5,
      max_len : 32
    }
  ];
  // User password field, field number 2
  // Use validate rules to validate password length, minimum length 8, maximum length 32
  string password = 2
  [
    (validate.rules).string = {
      min_len : 8,
      max_len : 32
    }
  ];
}

// Define login response message
message LoginReply {
  // Authentication token field, field number 1
  string token = 1;
  // User information field, field number 2
  UserInfo user = 2;
}

// Define user information message
message UserInfo{
  // User number field, field number 1
  string num = 1;
  // User account field, field number 2
  string account = 2;
  // User nickname field, field number 3
  string nickName = 3;
  // User avatar URL field, field number 4
  string avatar = 4;
}
